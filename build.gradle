buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
		classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
		classpath "com.diffplug.spotless:spotless-plugin-gradle:3.23.0"
		classpath "de.aaschmid:gradle-cpd-plugin:1.0"
	}
}

// basic plugins
plugins {
	id 'java'
	id 'maven'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.4"
	id 'de.thetaphi.forbiddenapis' version '2.6'
}
apply plugin: "io.spring.dependency-management"

// basic configuration
group = "jp.xet.spring.aws"
ext.artifactId = "aws-client-spring-boot-configuration"

// custom plugins
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"
apply plugin: "pmd"
apply plugin: "cpd"
apply plugin: "jacoco"
apply plugin: "com.diffplug.gradle.spotless"

// custom configuration
apply from: "${rootProject.projectDir}/gradle/quality/checkstyle.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/spotbugs.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/pmd.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/cpd.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/forbiddenapis.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/spotless.gradle"

apply from: "${rootProject.projectDir}/gradle/version.gradle"
apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/bintray.gradle"

tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
	pluginClasspath = project.configurations.spotbugsPlugins
}

// compiler
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(AbstractCompile) each {
	it.options.encoding = "UTF-8"
}

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

// ======== libraries ========
repositories {
	jcenter()
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
	}
}

configurations {
	testImplementation.extendsFrom compileOnly
}

dependencies {
	// spring
	implementation "org.springframework.boot:spring-boot"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	
	// aws
	compileOnly "com.amazonaws:aws-java-sdk-core:$awsJavaSdk1Version"
	compileOnly "software.amazon.awssdk:aws-core:$awsJavaSdk2Version"
	compileOnly "software.amazon.awssdk:apache-client:$awsJavaSdk2Version"
	compileOnly "software.amazon.awssdk:netty-nio-client:$awsJavaSdk2Version"
	
	// lombok
	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
	
	// test
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.boot:spring-boot-starter-logging"
	testImplementation 'org.assertj:assertj-core:3.10.0'
	
	// test AWS client v1
	testImplementation("com.amazonaws:aws-java-sdk:$awsJavaSdk1Version") {
		exclude group: 'com.amazonaws', module: 'aws-java-sdk-simpledb'
	}
	
	// test AWS client v2
	testImplementation "software.amazon.awssdk:aws-sdk-java:$awsJavaSdk2Version"
	// testImplementation "software.amazon.awssdk:simpledb:2.0.0-preview-11"
	
	// build
	spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:$findsecbugsVersion"
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.name == "commons-logging") {
			// prefer "jcl-over-slf4j" over "commons-logging":
			details.useTarget "org.slf4j:jcl-over-slf4j:$slf4jVersion"
		}
		if (details.requested.name == "log4j") {
			// prefer "log4j-over-slf4j" over "log4j":
			details.useTarget "org.slf4j:log4j-over-slf4j:$slf4jVersion"
		}
	}
}

// ======== wrapper ========
wrapper {
	gradleVersion = "5.0"
}
